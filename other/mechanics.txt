

================== ~ GAME MECHANICS ~ ==================


1st round - both players stake $5
Winner of round takes 5 + 5 - 10% = 9
2nd round - both players stake $9
Winner of round takes 9 + 9 - 10% = 16.2
3rd round - both players stake 16.2
Winner of round takes 32.4 - 10% = 29.16
etc..


Each round should last a maximum of 10 turns or first to zero health loses.
Should it last 10 rounds, the the loser is the one with the lowest health.
If it lasts 10 rounds and both players have the same health - Can the ether be returned?
The player to go first is determined at 'random'

How to determine random?
a = player1 address hashed with player2 timestamp
b = player2 address hashed with player1 timestamp
a hashed with b
generates a string of numbers which will be cycled through for the random numbers
ie.

0x9107231236123990112416
p1 random number = 6
0x9107231236123990112416 >> 1
 0x910723123612399011241
p2 random number = 1
 0x910723123612399011241 >> 1
  0x91072312361239901124
p1 random number = 4
  0x91072312361239901124 >> 1
   0x9107231236123990112 
p2 random number = 2

etc.
 
Random because you don't know when other player will join?
Can you know other players address before playing/time that they joined queue?

Winning players heal to full health.

Attack - Chance of hitting
Strength - Amount of damage
Defence - Amount of damage negated
Agility - Chance of being hit

1. Calculate chance of hitting
2. Calculate amount of damage
3. Calculate amount of damage negated

Random number: 0986854345465768123123

p1: ran = someNumber;
If ran + attack (* some modifier) > opponent agility (* some modifier) 
then: damage = 1 + strength - 1 * opponent defence


Scenario:
p1              p2
-------------------
10              10  Health
3                1  Attack
2                3  Strength
2                1  Defence
2                4  Agility 

p1 goes first:
ran = 5;
ran + 3 = 8;
8 > 4 -> p1 will attack
damage = 1 + 2 - 1 = 2

p1              p2
-------------------
10               8  Health
3                1  Attack
2                3  Strength
2                1  Defence
2                4  Agility

p2. ran = 4;
ran + 3 = 4;
4 > 2 -> p2 will attack
damage = 1 + 3 - 2 = 2

p1              p2
-------------------
8                8  Health
3                1  Attack
2                3  Strength
2                1  Defence
2                4  Agility

p1. ran = 6;
ran + 3 = 9;
9 > 4 -> p1 will attack
damage = 1 + 2 - 1 = 2

p1              p2
-------------------
8                6  Health
3                1  Attack
2                3  Strength
2                1  Defence
2                4  Agility

p2. ran = 8;
ran + 3 = 11;
4 > 2 -> p2 will attack
damage = 1 + 3 - 2 = 2